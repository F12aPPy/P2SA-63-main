// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// AntenatalsColumns holds the columns for the "antenatals" table.
	AntenatalsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "added_time", Type: field.TypeTime},
		{Name: "babystatus_id", Type: field.TypeInt, Nullable: true},
		{Name: "patient_id", Type: field.TypeInt, Nullable: true},
		{Name: "owner_id", Type: field.TypeInt, Nullable: true},
	}
	// AntenatalsTable holds the schema information for the "antenatals" table.
	AntenatalsTable = &schema.Table{
		Name:       "antenatals",
		Columns:    AntenatalsColumns,
		PrimaryKey: []*schema.Column{AntenatalsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "antenatals_babystatuses_antenatals",
				Columns: []*schema.Column{AntenatalsColumns[2]},

				RefColumns: []*schema.Column{BabystatusesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "antenatals_patients_antenatals",
				Columns: []*schema.Column{AntenatalsColumns[3]},

				RefColumns: []*schema.Column{PatientsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "antenatals_users_antenatals",
				Columns: []*schema.Column{AntenatalsColumns[4]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// BabystatusesColumns holds the columns for the "babystatuses" table.
	BabystatusesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "babystatus_name", Type: field.TypeString, Unique: true},
	}
	// BabystatusesTable holds the schema information for the "babystatuses" table.
	BabystatusesTable = &schema.Table{
		Name:        "babystatuses",
		Columns:     BabystatusesColumns,
		PrimaryKey:  []*schema.Column{BabystatusesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PatientsColumns holds the columns for the "patients" table.
	PatientsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "patient_name", Type: field.TypeString, Unique: true},
		{Name: "patient_age", Type: field.TypeInt, Unique: true},
	}
	// PatientsTable holds the schema information for the "patients" table.
	PatientsTable = &schema.Table{
		Name:        "patients",
		Columns:     PatientsColumns,
		PrimaryKey:  []*schema.Column{PatientsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_name", Type: field.TypeString, Unique: true},
		{Name: "user_email", Type: field.TypeString, Unique: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AntenatalsTable,
		BabystatusesTable,
		PatientsTable,
		UsersTable,
	}
)

func init() {
	AntenatalsTable.ForeignKeys[0].RefTable = BabystatusesTable
	AntenatalsTable.ForeignKeys[1].RefTable = PatientsTable
	AntenatalsTable.ForeignKeys[2].RefTable = UsersTable
}
